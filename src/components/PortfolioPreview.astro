---
import type { MarkdownInstance } from "astro";
import type { BlogPost } from "../types";

interface Props {
    project: MarkdownInstance<BlogPost>;
}

const { frontmatter, url } = Astro.props.project;
---

<div class="card">
    <div class="titleCard" style={`background-color:${frontmatter.bgcolor}`}>
        <h1 class="title" style={`color:${frontmatter.textcolor}`}>
            {frontmatter.title}
        </h1>
    </div>
    <div class="descCard">
        <p class="desc">{frontmatter.description}</p>
        <div class="tags">
            Tagged:
            {
                frontmatter.tags.map((t) => (
                    <div class="tag" data-tag={t}>
                        {t}
                    </div>
                ))
            }
        </div>
        <a rel="prefetch" class="link" href={url}>
            <span
                class="linkInner"
                style={`color:${frontmatter.textcolor}; border-color:${frontmatter.textcolor}`}
            >
                View
            </span>
        </a>
    </div>
</div>

<style>
    @keyframes border-animation {
        0% {
            width: 0;
            height: 0;
            border-top-color: black;
            border-right-color: transparent;
            border-bottom-color: transparent;
            border-left-color: transparent;
        }

        50% {
            width: 100%;
            height: 0;
            border-top-color: black;
            border-right-color: black;
            border-bottom-color: transparent;
            border-left-color: transparent;
        }

        100% {
            width: 100%;
            height: 100%;
            border-top-color: black;
            border-right-color: black;
            border-bottom-color: transparent;
            border-left-color: transparent;
        }
    }
    .card {
        position: relative;
        color: var(--t-fg);
        background: var(--t-card);
    }

    .title {
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0;
        color: white;
        flex-direction: column;
        font-size: var(--f-u3);
        font-weight: 900;
        text-transform: uppercase;
        letter-spacing: 0.0625em;
        text-align: center;
    }

    @media (min-width: 750px) {
        .title {
            font-size: var(--f-u7);
        }
    }

    .titleCard {
        position: relative;
        background-size: cover;
        background-position: 50% 100%;
        padding-top: min(30%, 30rem);
    }

    .descCard {
        padding: 1.5em;
    }

    .desc {
        font-size: var(--f-u1);
        line-height: 1.4;
        margin-top: 0em;
        margin-bottom: 1em;
    }

    .link {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: var(--t-fg);
        font-size: var(--f-u2);
        font-weight: 700;
        background: rgba(0, 0, 0, 0.25);
        opacity: 0;
        text-decoration: none;
        text-transform: uppercase;
        backdrop-filter: blur(10px);
        transition: opacity 300ms ease;
    }

    .link:focus,
    .link:hover {
        opacity: 1;
        transition: opacity 300ms ease;
    }

    .link:focus,
    .link:hover .linkInner {
        transform: translateY(0);
    }
    .linkInner {
        padding: 0.375em 1em;
        transition: transform 300ms cubic-bezier(0, 0.4, 0.6, 1),
            border-color 1s linear;
        transform: translateY(25%);
        border: 2px solid;
    }

    .nav {
        display: flex;
        justify-content: flex-end;
    }

    .tags {
        font-size: var(--f-d2);
        text-transform: uppercase;
    }

    .tag {
        display: inline-block;
        color: var(--c-yellow);
        text-transform: uppercase;
        margin-left: 0.5em;
    }

    .tag:nth-of-type(1n) {
        color: var(--c-green);
    }
    .tag:nth-of-type(2n) {
        color: var(--c-orange);
    }
    .tag:nth-of-type(3n) {
        color: var(--c-blue);
    }
    .tag:nth-of-type(4n) {
        color: var(--c-pink);
    }
</style>
